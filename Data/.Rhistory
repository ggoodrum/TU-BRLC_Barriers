1 - log((0 + 1) / (10+1))
1 - log((10 + 1) / (0+1))
?range
range(c(4,5,4,2,1,2))
5 + 1 / 5 + 1
(5 + 1) / (5+1)
(6 + 1) / (4+1)
(4 + 1) / (6+1)
(4 + 1) / (6 + 1)
0.5 / 0.5
log((0 + 1) / (9 + 1))
log((9 + 1) / (0 + 1))
log((10 + 1) / (0 + 1))
log((0 + 1) / (10 + 1))
log((5 + 1) / (5 + 1))
log(11)
1 - ((abs(log((5 + 1) / (5 + 1)))) / (log(10 + 1)))
1 - ((abs(log((6 + 1) / (4 + 1)))) / (log(10 + 1)))
1 - ((abs(log((7 + 1) / (3 + 1)))) / (log(10 + 1)))
1 - ((abs(log((10 + 1) / (0 + 1)))) / (log(10 + 1)))
1 - ((abs(log((8 + 1) / (2 + 1)))) / (log(10 + 1)))
1 - ((abs(log((9 + 1) / (1 + 1)))) / (log(10 + 1)))
1 - ((abs(log((1 + 1) / (9 + 1)))) / (log(10 + 1)))
abs(0.5 - 0.25)
abs(0.5 - 7.25)
abs(0.5 - 0.75)
abs(0.5 - 1.0)
abs(0.5 + 1.0)
abs(0.5 - 1.0)
(23 / 0.521)
23 * (1 / (1.233^3))
(23 / 1e6) / (1/4)
(23 / 1e6) / (1e3)
521 / (1.233e3)
521 / (1.233e3)
521 / (1.233e3 / 1e6)
-9/8
(50 + 132) / 2
1.3 + 2.6
3.9 / 2
(-2 * abs(0.5 - 0.5)) + 1
(-2 * abs(0 - 0.5)) + 1
(-2 * abs(1 - 0.5)) + 1
(-2 * abs(0.3 - 0.5)) + 1
(-2 * abs(0.7 - 0.5)) + 1
(-2 * abs(0.8 - 0.5)) + 1
(-2 * abs(0.2 - 0.5)) + 1
install.packages('codyn', dependencies = TRUE)
library(codyn)
data(pplots)
View(pplots)
df <- subset(pplots, plot == 25)
View(df)
length(unique(df$species))
57 / 26
RAC_change(df = df,
species.var = "species",
abundance.var = "relative_cover",
time.var = "year")
df <- subset(pplots, year == 2002 & block < 3)
View(df)
RAC_difference(df = df,
species.var = "species",
abundance.var = "relative_cover",
treatment.var = 'treatment',
block.var = "block",
replicate.var = "plot")
(1150 * 28.3168)
1150 * 28.3168
1150 * 28.3168 * 0.001
1150 * 28316
28 * 2
56 * 10
length(seq(21,27,by=0.5))
length(seq(21,27,by=1))
2 *  *7
2 * 2 * 7
28 * 100
2800/100
2 * 2 * 13
52 * 100
5200/ 100
52 / 2
2 * 2*7
28 * 100
2800 / 100
5.5 / 10
28  * 0.55
4 * 13
2 * 2 * 7
2 * 2 * 13
52 * 0.55
52 * 100
5200 * 0.55
2860 / 60
52 * 0.55
100 * 0.55
52 * 10
52 * 50
2600 * 0.55
1430 / 60
52 * 13
676 * 0.55
371 / 60
length(seq(21,27,by=1))
length(seq(21,27,by=0.5))
length(seq(21,27,by=0.25))
length(seq(21,27,by=0.1))
25 * 25
625 * 4
2500 * 0.55
1375 / 60
22.92 / 2
2500 / 2
1250 * 0.55
687.5 / 60
25 * 25
625 * 2
1250 * 0.55
687.5 / 2
687.5 / 60
7 * 100
700 * 2
1400 / 60
23 / 2
(39800 + 50) / 1
(39800 + 36) / 1
(39800 + 1) / 36
36 + 1 / 1
(1 / (1 + 36)) * 100
100 * 100
3000 * 0
3000 * 0.55
1650 / 60
27.5 / 2
500 * 3
1500 * 0.55
825 / 60
14 / 2
install.packages("ggpattern", dependencies = TRUE)
install.packages("ggpattern", dependencies = TRUE)
# ---------------------------------------------------------------------------- #
# 00. Set up workspace
# ---------------------------------------------------------------------
# Summary: Set up workspace, load data, and load relevant packages.
# Clean workspace
rm(list = ls())
# Load Packages
if(!require("rstudioapi")){
install.packages("rstudioapi", dependencies = TRUE); library(rstudioapi)}
if(!require("tidyverse")){
install.packages("tidyverse", dependencies = TRUE); library(tidyverse)}
if(!require("rio")){
install.packages("rio", dependencies = TRUE); library(rio)}
if(!require("Hmisc")){
install.packages("Hmisc", dependencies = TRUE); library(Hmisc)}
temp <- c(3,3,4,5,6,7,8,7,7,4,3,2)
length(temp)
data <- data.frame(iteration = rep(0.5, 30))
data
data$value <- c(1, rep(NA,nrow(data) - 1))
data
for(i in 2:nrow(data)){data$value[i] = data$value[i-1] * data$iteration[i]}
data
for(i in 2:nrow(data)){data$value[i] = data$value[i-1] + (data$value[i-1] * 0.5)}
data
# Declare constants
cfs_to_cms <- 2.832e-2
acft_to_m3 <- 1.233e3
ac_to_m2 <- 4.047e3
in_to_mm <- 2.54e1
m3_to_km3 <- 1e-9
in_to_mm <- 2.54e1
mm_to_m <- 1e-3
ft_to_m <- 0.3048
data.frame(Reservoir = c('Cub River',
'Above Cutler'
'Temple Fork',
data.frame(Reservoir = c('Cub River',
'Above Cutler',
'Temple Fork',
'Fielding',
'Whites Valley'))
data.frame(Reservoir = c('Cub River',
'Above Cutler',
'Temple Fork',
'Fielding_40',
'Fielding_70',
'Whites Valley'),
Storage = c(27000,
51000,
41000,
40000,
70000,
400000))
data.frame(Reservoir = c('Cub River',
'Above Cutler',
'Temple Fork',
'Fielding_40',
'Fielding_70',
'WV_400',
'WV_333',
'WV_330',
'WV_319',
'WV_309',
'WV_170'),
Storage = c(27000,
51000,
41000,
40000,
70000,
400000,
333000,
330000,
319000,
309000,
170000))
data.frame(Reservoir = c('Cub River',
'Above Cutler',
'Temple Fork',
'Fielding_40',
'Fielding_70',
'WV_400',
'WV_333',
'WV_330',
'WV_319',
'WV_309',
'WV_170'),
stor_acft = c(27000,
51000,
41000,
40000,
70000,
400000,
333000,
330000,
319000,
309000,
170000)) %>%
dplyr::mutate(stor_m3 = stor_acft * acft_to_m3) %>%
dplyr::mutate(stor_Mm3 = stor_m3 / 1e6) %>%
as.data.frame
library(dplyr)
data.storage <- data.frame(Reservoir = c('Cub River',
'Above Cutler',
'Temple Fork',
'Fielding_40',
'Fielding_70',
'WV_400',
'WV_333',
'WV_330',
'WV_319',
'WV_309',
'WV_170'),
stor_acft = c(27000,
51000,
41000,
40000,
70000,
400000,
333000,
330000,
319000,
309000,
170000)) %>%
dplyr::mutate(stor_m3 = stor_acft * acft_to_m3) %>%
dplyr::mutate(stor_Mm3 = stor_m3 / 1e6) %>%
as.data.frame
data.storage
View(data.storage)
406.9 + 86.3
381 + 49.3 + 62.8
410.6 + 49.3 + 33.3
393.3 + 49.3 + 50.6
209.6 + 86.3 + 62.8 + 33.3 + 50.6
209.6 + 86.3 + 62.8 + 33.3 + 50.6
(0.364 + 0.636)
(0.364 * 0.636)
(0.364 * 0.328)
(0.636 * 0.)
(0.636 * 0.223)
11.9+14.2
acft_to_m3 <- 1.233e3
(220000 * acft_to_m3) / 1e6
acft_to_m3 <- 1.233e3
((402 * 1000) * acft_to_m3) / 1e6
data <- c(rep(400000, 4))
data <- c(rep(400000, 7))
mean(data)
data <- c(rep(400000, 7), 414000, 244000, 610000, 610000, 608000, 622000)
mean(data)
min(data)
max(data)
acft_to_m3 <- 1.233e3
(454464.5 * acft_to_m3) / 1e6
(244000 * acft_to_m3) / 1e6
(622000 * acft_to_m3) / 1e6
acft_to_m3 <- 1.233e3
1 / (1 * acft_to_m3)
0.00001*10000
0.00001*1000
acft_to_m3 <- 1.233e3
0.01 / (acft_to_m3)
0.01 * (acft_to_m3)
1/(acft_to_m3)
1280.8 - 1278.1
12/140
boa <- 2203 - 300
boa
boa + 680 + 80 + 100
boa + 680 + 80 + 100 + (6 * 25)
boa <- 1888.42
fid <- 435.88 - 300
fid
2692 - (278.47 + 166.91 + 39.04)
2692 - (278.47 + 166.91 + 39.04 + 115)
yc <- 2092
boa - fid + yc
boa - fid + yc - 1200
boa - fid + yc - 1800
boa <- 2784.42
fid <- (294.14 + 23.04 + 38.5 + 84 + 77.29 - 29.73)
fid
fid <- (294.14 + 23.04 + 38.5 + 84 + 77.29 - 29.73) - 300
fid
yc <- 2000
opal <- 18 * 30
opal
boa + (200 - fid) + opal
boa + (200 - fid) + opal + yc
5337 - 1800
boa <- 2758.42
fid <- 409.93 - 200
fid
100 - (16 * 2)
jacket <- 215 + (14*2)
jacket
hoodie < 109
hoodie <- 109
109 + 135
109*2
boa <- 1031.51
fid <- 57.73 + 103.64
fid
cash <- 100
cash <- 120
rent.08_09 <- 1200
util <- 105 *4
util
util <- 105 *6
util
yell <- 2000
karin <- 30 * 19
karin
peter <- 30 * 9
peter
peter + karin
(boa + karin + yell + peter)
(boa + karin + yell + peter) - (rent.08_09 + utils + fid)
(boa + karin + yell + peter) - (rent.08_09 + util + fid)
parallel::detectCores()
boa <- 1931.51
fid <- 455.58 + 136.16
fid
jim_lori <- 200
cash <- 400
balance <- boa + cash - fid
balance
cash <- 300
balance
balance <- boa + cash - fid
balance
balance.wYC <- balance + 2092
balance.wYC
balance.wYC - 1200.
yoshi <- 9 * 25
yoshi
balance.wYC + yoshin
balance.wYC + yoshi
balance.wYC + yoshi - 1200
boa - 550
fid
boa - 450
fid - 450
boa <- 1881.51
fid.pay <- 450
fid <- 559.64 + 91.87
fid
fid.bal <- fid - fid.pay
fid.bal
yoshi <- 9 * 25
yoshi
yoshi <- 9 * 30
yoshi
yoshi <- 9 * 25
boa + yoshi - 600 -  fid.bal
1346 + 298 + 856 + 17610 + 79 + 57
85000  / 12
06 / 60
10/3600
((60 * 8) + 27) / ((60 * 13) + 7)
118 + 21
((60 * 7) + 47) / ((60 * 13) + 7)
((60 * 8) + 33) / ((60 * 13) + 7)
# --------------------------------------------------------------------- #
# 00. Set up workspace
# ---------------------------------------------------------------------
# Summary: Set up workspace, load data, and load relevant packages.
# Clean workspace
rm(list = ls())
# Load Packages
# Data/stats
if(!require("rstudioapi")){
install.packages("rstudioapi", dependencies = TRUE); library(rstudioapi)}
if(!require("tidyverse")){
install.packages("tidyverse", dependencies = TRUE); library(tidyverse)}
if(!require("rio")){
install.packages("rio", dependencies = TRUE); library(rio)}
if(!require("lubridate")){
install.packages("lubridate", dependencies = TRUE); library(lubridate)}
# Plotting
# Spatial
# Plotting
# Declare working directory
pwd <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(pwd)
# ---------------------------------------------------------------------
# --------------------------------------------------------------------- #
# 01. Barrier Data (currently only Bear Lake)
# ---------------------------------------------------------------------
# Summary: Combine NABD and TU barrier data into single dataset for analysis.
# NABD = National Aquatic Barrier Dataset (https://www.aquaticbarriers.org)
# NOTE: Currently preliminary TU dataset that only includes Bear Lake barriers
# Declare data
file.data.tu <- paste0(getwd(), '/TU/TU_BearLake.xlsx')
file.data.nabd <- paste0(getwd(), '/NABD/NABD_SnakeBear.csv')
# Load data
data.tu <- import_list(file.data.tu)
data.nabd <- read.csv(file = file.data.nabd, header = TRUE)
# ---------------------------------------------------------------------------- #
# Format Data - NABD
data.nabd.join <- data.nabd %>%
select(Name,BarrierType,
River,
lat, lon,
SARPID,
Passability,
Removed,
YearRemoved) %>%
rename(BarrierName = Name,
StreamName = River,
Lat = lat,
Lon = lon,
SourceID = SARPID,
Mitigated = Removed,
YearMitigated = YearRemoved) %>%
mutate(Source = 'National Aquatic Barrier Dataset (SARP)',
Pass_NABD = Passability) %>%
# Passability from ratings
mutate(Pass_Before = ifelse(Pass_NABD == 'Complete barrier', 0.0,
ifelse(Pass_NABD == 'Unknown', NA,
ifelse(Pass_NABD %in% c('Partial passability', 'Partial passability - salmonid'),
0.5, 1.0)))) %>%
# Passability unknown - estimated from barrier type
mutate(Pass_Before = ifelse(Pass_NABD == 'Unknown' & BarrierType == 'Dam', 0,
ifelse(Pass_NABD == 'Unknown' & BarrierType == 'Assessed road-related barrier',
0.5, Pass_Before))) %>%
mutate(Pass_After = Pass_Before) %>%
select(BarrierName, BarrierType, StreamName, Source, SourceID,
Lat, Lon,
Mitigated, YearMitigated, Pass_NABD, Pass_Before, Pass_After) %>%
as.data.frame
# Format TU Data - Culverts
data.tu.culverts <- data.tu[['Culverts']] %>%
rename(BarrierName = `Culvert/Road Name`,
StreamName = `Waterway Name`,
Lat = `Culvert LAT`,
Lon = `Culvert LONG`,
YearMitigated = `Year Replaced`,
Pass_Before = `Culvert Passage before`,
Pass_After = `Culvert Passage after`) %>%
mutate(BarrierType = 'Culvert',
Source = 'Trout Unlimited (TU)',
SourceID = paste0('TU_CUL_', CUL_ID),
Mitigated = 'yes',
Pass_NABD = NA) %>%
select(BarrierName, BarrierType, StreamName, Source, SourceID,
Lat, Lon,
Mitigated, YearMitigated, Pass_NABD, Pass_Before, Pass_After) %>%
as.data.frame
# Format TU Data - Diversions
data.tu.diversions <- data.tu[['Diversions']] %>%
rename(BarrierName = `Div Name`,
StreamName = `Waterway Name`,
Lat = `Div LAT`,
Lon = `Div LONG`,
Mitigated = `Div struct Rebuild     (Y/N)`,
YearMitigated = `Div Rebuild Year      (YYYY)`,
Pass_Before = `Diversion Passability Before`,
Pass_After = `Diversion Passability After`) %>%
mutate(BarrierType = 'Diversion',
Source = 'Trout Unlimited (TU)',
SourceID = paste0('TU_DIV_', `Div #`),
Pass_NABD = NA,
Pass_After = as.numeric(Pass_After)) %>%
mutate(YearMitigated = as.numeric(YearMitigated)) %>%
select(BarrierName, BarrierType, StreamName, Source, SourceID,
Lat, Lon,
Mitigated, YearMitigated, Pass_NABD, Pass_Before, Pass_After) %>%
as.data.frame
View(data.tu.culverts)
View(data.tu.diversions)
